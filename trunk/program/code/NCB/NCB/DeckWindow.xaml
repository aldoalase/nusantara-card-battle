<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	x:Class="NCB.DeckWindow"
	x:Name="Window"
	Title="DeckWindow"
	Width="1024" Height="768" AllowsTransparency="True" WindowStyle="None" Background="{x:Null}">
	<Window.Resources>
		<Style x:Key="upButton" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Image Source="images/arrow up.png" Stretch="Fill"/>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="downButton" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Image Source="images/arrow down.png" Stretch="Fill"/>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="InsertDeckButton" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Image Source="images/insert deck.png" Stretch="Fill"/>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="InsertStockButton" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Image Source="images/insert stock.png" Stretch="Fill"/>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Storyboard x:Key="upButtonStockEnter">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="UpButtonStock">
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.4"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="UpButtonStockLeave">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="UpButtonStock">
				<EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="DownButtonStockEnter">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DownButtonStock">
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.4"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="DownButtonStockLeave">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DownButtonStock">
				<EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="UpButtonDeckEnter">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="UpButtonDeck">
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.4"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="UpButtonDeckLeave">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="UpButtonDeck">
				<EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="DownButtonDeckEner">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DownButtonDeck">
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.4"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="DownButtonDeckLeave">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DownButtonDeck">
				<EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="InsertDeckButtonEnter">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InsertDeckButton">
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.4"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="InsertDeckButtonLeave">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InsertDeckButton">
				<EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="InsertDeckButtonClick">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InsertDeckButton">
				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="6"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="2"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
	</Window.Resources>
	<Window.Triggers>
		<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="UpButtonStock">
			<BeginStoryboard x:Name="upButtonStockEnter_BeginStoryboard" Storyboard="{StaticResource upButtonStockEnter}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="UpButtonStock">
			<BeginStoryboard x:Name="UpButtonStockLeave_BeginStoryboard" Storyboard="{StaticResource UpButtonStockLeave}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="DownButtonStock">
			<BeginStoryboard x:Name="DownButtonStockEnter_BeginStoryboard" Storyboard="{StaticResource DownButtonStockEnter}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="DownButtonStock">
			<BeginStoryboard x:Name="DownButtonStockLeave_BeginStoryboard" Storyboard="{StaticResource DownButtonStockLeave}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="UpButtonDeck">
			<BeginStoryboard x:Name="UpButtonDeckEnter_BeginStoryboard" Storyboard="{StaticResource UpButtonDeckEnter}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="UpButtonDeck">
			<BeginStoryboard x:Name="UpButtonDeckLeave_BeginStoryboard" Storyboard="{StaticResource UpButtonDeckLeave}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="DownButtonDeck">
			<BeginStoryboard x:Name="DownButtonDeckEner_BeginStoryboard" Storyboard="{StaticResource DownButtonDeckEner}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="DownButtonDeck">
			<BeginStoryboard x:Name="DownButtonDeckLeave_BeginStoryboard" Storyboard="{StaticResource DownButtonDeckLeave}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="InsertDeckButton">
			<BeginStoryboard x:Name="InsertDeckButtonEnter_BeginStoryboard" Storyboard="{StaticResource InsertDeckButtonEnter}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="InsertDeckButton">
			<BeginStoryboard x:Name="InsertDeckButtonLeave_BeginStoryboard" Storyboard="{StaticResource InsertDeckButtonLeave}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="ButtonBase.Click" SourceName="InsertDeckButton">
			<BeginStoryboard x:Name="InsertDeckButtonClick_BeginStoryboard" Storyboard="{StaticResource InsertDeckButtonClick}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
	</Window.Triggers>

	<Grid x:Name="LayoutRoot">
		<Image Source="images/deck window.png" Stretch="Fill" OpacityMask="Black"/>
		<Rectangle Fill="#FF513F0F" HorizontalAlignment="Right" Margin="0,230,196,274" Stroke="Black" Width="192"/>
		<Rectangle Fill="#FFB6B0A0" HorizontalAlignment="Right" Margin="0,252,216,298" Stroke="Black" Width="150" Height="218"/>
		<Label Content="ACTIVE DECK" HorizontalAlignment="Right" Height="34" Margin="0,193,203,0" VerticalAlignment="Top" Width="150" FontSize="18.667" OpacityMask="Black" Foreground="#FF513E0F"/>
		<Button x:Name="UpButtonDeck" Content="Button" HorizontalAlignment="Right" Height="48" Margin="0,0,285.667,220" Style="{DynamicResource upButton}" VerticalAlignment="Bottom" Width="60" Cursor="Hand"/>
		<Button x:Name="DownButtonDeck" Content="Button" HorizontalAlignment="Right" Height="48" Margin="0,0,232.667,220" Style="{DynamicResource downButton}" VerticalAlignment="Bottom" Width="60" Cursor="Hand"/>
		<Image HorizontalAlignment="Right" Margin="0,252,216,298" Width="150"/>
		<Rectangle Fill="#FF513F0F" HorizontalAlignment="Left" Margin="220,230,0,274" Stroke="Black" Width="192"/>
		<Rectangle Fill="#FFB6B0A0" HorizontalAlignment="Left" Margin="242,252,0,298" Stroke="Black" Width="150" Height="218"/>
		<Label Content="CARD STOCK" HorizontalAlignment="Left" Height="34" Margin="249,193,0,0" VerticalAlignment="Top" Width="150" FontSize="18.667" OpacityMask="Black" Foreground="#FF513E0F"/>
		<Button x:Name="UpButtonStock" Content="Button" HorizontalAlignment="Left" Height="48" Margin="262.333,0,0,220" Style="{DynamicResource upButton}" VerticalAlignment="Bottom" Width="60" Cursor="Hand"/>
		<Button x:Name="DownButtonStock" Content="Button" HorizontalAlignment="Left" Height="48" Margin="315.333,0,0,220" Style="{DynamicResource downButton}" VerticalAlignment="Bottom" Width="60" Cursor="Hand"/>
		<Image HorizontalAlignment="Left" Margin="242,252,0,298" Width="150"/>
		<Button x:Name="InsertDeckButton" Content="Button" Height="50" Margin="478,298,446,0" Style="{DynamicResource InsertDeckButton}" VerticalAlignment="Top" Cursor="Hand" RenderTransformOrigin="0.5,0.5">
			<Button.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Button.RenderTransform>
		</Button>
		<Button Content="Button" Margin="478,376,446,342" Style="{DynamicResource InsertStockButton}"/>
	</Grid>
</Window>